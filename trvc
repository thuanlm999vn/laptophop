<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checksheet Quản Lý Máy Tính Phòng Họp</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }

        .header {
            text-align: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 40px;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .computer-section {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .computer-section:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .computer-title {
            background: linear-gradient(45deg, #ff6b6b, #ff8e8e);
            color: white;
            padding: 20px;
            border-radius: 12px;
            margin: -25px -25px 25px -25px;
            font-size: 1.5rem;
            font-weight: bold;
            text-align: center;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        }

        .computer-section:nth-child(3) .computer-title {
            background: linear-gradient(45deg, #4ecdc4, #44a08d);
            box-shadow: 0 4px 15px rgba(78, 205, 196, 0.3);
        }

        .status-section {
            display: flex;
            gap: 20px;
            margin-bottom: 25px;
            align-items: center;
            flex-wrap: wrap;
        }

        .status-box {
            padding: 15px 25px;
            border-radius: 50px;
            font-weight: bold;
            font-size: 1.1rem;
            text-align: center;
            min-width: 150px;
            transition: all 0.3s ease;
            cursor: default;
        }

        .status-available {
            background: linear-gradient(45deg, #d4edda, #c3e6cb);
            color: #155724;
            border: 2px solid #b8e6c1;
            box-shadow: 0 4px 15px rgba(21, 87, 36, 0.2);
        }

        .status-in-use {
            background: linear-gradient(45deg, #f8d7da, #f5c6cb);
            color: #721c24;
            border: 2px solid #f1b0b7;
            box-shadow: 0 4px 15px rgba(114, 28, 36, 0.2);
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .button-group {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            font-size: 1rem;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-borrow {
            background: linear-gradient(45deg, #28a745, #20c997);
            color: white;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

        .btn-borrow:hover {
            background: linear-gradient(45deg, #218838, #1ca085);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
        }

        .btn-return {
            background: linear-gradient(45deg, #dc3545, #e74c3c);
            color: white;
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
        }

        .btn-return:hover {
            background: linear-gradient(45deg, #c82333, #c0392b);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(220, 53, 69, 0.4);
        }

        .borrow-form {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 25px;
            border-radius: 12px;
            margin-bottom: 25px;
            border: 2px solid #dee2e6;
            box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #495057;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .form-group input, 
        .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #dee2e6;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-group input:focus, 
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-1px);
        }

        .current-user {
            background: linear-gradient(135deg, #e3f2fd, #f3e5f5);
            padding: 20px;
            border-radius: 12px;
            border-left: 5px solid #667eea;
            margin-bottom: 25px;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.1);
        }

        .current-user h4 {
            color: #667eea;
            margin-bottom: 15px;
            font-size: 1.2rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .current-user p {
            margin: 8px 0;
            font-size: 0.95rem;
        }

        .current-user strong {
            color: #495057;
            min-width: 120px;
            display: inline-block;
        }

        .history-section {
            margin-top: 25px;
        }

        .history-title {
            background: linear-gradient(45deg, #6c757d, #5a6268);
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 15px;
            font-weight: bold;
            font-size: 1.1rem;
            box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
        }

        .history-list {
            max-height: 250px;
            overflow-y: auto;
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            border: 1px solid #dee2e6;
        }

        .history-item {
            padding: 12px;
            border-bottom: 1px solid #dee2e6;
            font-size: 0.9rem;
            transition: background-color 0.3s ease;
        }

        .history-item:hover {
            background-color: rgba(102, 126, 234, 0.05);
        }

        .history-item:last-child {
            border-bottom: none;
        }

        .history-item strong {
            color: #667eea;
        }

        .history-item small {
            color: #6c757d;
            font-style: italic;
        }

        .footer {
            text-align: center;
            margin-top: 40px;
            padding: 25px;
            background: linear-gradient(135deg, #e9ecef, #f8f9fa);
            border-radius: 15px;
            color: #6c757d;
            border: 1px solid #dee2e6;
        }

        .footer p {
            margin: 8px 0;
            font-size: 0.95rem;
        }

        .footer strong {
            color: #495057;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 15px;
                margin: 10px;
            }

            .header h1 {
                font-size: 2rem;
            }

            .status-section {
                flex-direction: column;
                align-items: stretch;
            }

            .button-group {
                justify-content: center;
                margin-top: 15px;
            }

            .form-row {
                grid-template-columns: 1fr;
            }

            .computer-title {
                font-size: 1.3rem;
            }
        }

        /* Scrollbar Styling */
        .history-list::-webkit-scrollbar {
            width: 8px;
        }

        .history-list::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        .history-list::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }

        .history-list::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

        /* Loading Animation */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>📊 CHECKSHEET QUẢN LÝ MÁY TÍNH PHÒNG HỌP</h1>
            <p>Hệ thống quản lý hiện đại - Ghi nhận đầy đủ thông tin mượn/trả máy tính</p>
        </div>

        <!-- Máy tính 1 -->
        <div class="computer-section" id="computer1">
            <div class="computer-title">
                💻 MÁY TÍNH 1
            </div>
            
            <div class="status-section">
                <div class="status-box status-available" id="status1">
                    ✅ ĐANG RẢNH
                </div>
                <div class="button-group" style="margin-left: auto;">
                    <button class="btn btn-borrow" onclick="toggleBorrowForm(1)">
                        📝 Mượn máy
                    </button>
                    <button class="btn btn-return" onclick="returnComputer(1)" style="display: none;" id="returnBtn1">
                        🔄 Trả máy
                    </button>
                </div>
            </div>

            <div class="borrow-form" id="borrowForm1" style="display: none;">
                <div class="form-row">
                    <div class="form-group">
                        <label>👤 Họ và tên:</label>
                        <input type="text" id="name1" placeholder="Nhập họ tên đầy đủ">
                    </div>
                    <div class="form-group">
                        <label>🏢 Phòng ban:</label>
                        <select id="department1">
                            <option value="">-- Chọn phòng ban --</option>
                            <option value="Hành chính">Hành chính</option>
                            <option value="Kế toán">Kế toán</option>
                            <option value="Kinh doanh">Kinh doanh</option>
                            <option value="Kỹ thuật">Kỹ thuật</option>
                            <option value="Marketing">Marketing</option>
                            <option value="Nhân sự">Nhân sự</option>
                            <option value="IT">IT</option>
                            <option value="Khác">Khác</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>🎯 Mục đích sử dụng:</label>
                        <input type="text" id="purpose1" placeholder="VD: Họp với khách hàng, thuyết trình, đào tạo...">
                    </div>
                    <div class="form-group">
                        <label>⏰ Dự kiến trả máy:</label>
                        <input type="datetime-local" id="returnTime1">
                    </div>
                </div>
                <button class="btn btn-borrow" onclick="borrowComputer(1)">
                    ✅ Xác nhận mượn
                </button>
            </div>

            <div class="current-user" id="currentUser1" style="display: none;">
                <h4>👤 Thông tin người sử dụng:</h4>
                <p><strong>Tên:</strong> <span id="currentName1"></span></p>
                <p><strong>Phòng ban:</strong> <span id="currentDept1"></span></p>
                <p><strong>Mục đích:</strong> <span id="currentPurpose1"></span></p>
                <p><strong>Thời gian mượn:</strong> <span id="borrowTime1"></span></p>
                <p><strong>Dự kiến trả:</strong> <span id="expectedReturn1"></span></p>
            </div>

            <div class="history-section">
                <div class="history-title">📋 Lịch sử sử dụng hôm nay</div>
                <div class="history-list" id="history1">
                    <div class="history-item">Chưa có hoạt động nào hôm nay</div>
                </div>
            </div>
        </div>

        <!-- Máy tính 2 -->
        <div class="computer-section" id="computer2">
            <div class="computer-title">
                💻 MÁY TÍNH 2
            </div>
            
            <div class="status-section">
                <div class="status-box status-available" id="status2">
                    ✅ ĐANG RẢNH
                </div>
                <div class="button-group" style="margin-left: auto;">
                    <button class="btn btn-borrow" onclick="toggleBorrowForm(2)">
                        📝 Mượn máy
                    </button>
                    <button class="btn btn-return" onclick="returnComputer(2)" style="display: none;" id="returnBtn2">
                        🔄 Trả máy
                    </button>
                </div>
            </div>

            <div class="borrow-form" id="borrowForm2" style="display: none;">
                <div class="form-row">
                    <div class="form-group">
                        <label>👤 Họ và tên:</label>
                        <input type="text" id="name2" placeholder="Nhập họ tên đầy đủ">
                    </div>
                    <div class="form-group">
                        <label>🏢 Phòng ban:</label>
                        <select id="department2">
                            <option value="">-- Chọn phòng ban --</option>
                            <option value="Hành chính">Hành chính</option>
                            <option value="Kế toán">Kế toán</option>
                            <option value="Kinh doanh">Kinh doanh</option>
                            <option value="Kỹ thuật">Kỹ thuật</option>
                            <option value="Marketing">Marketing</option>
                            <option value="Nhân sự">Nhân sự</option>
                            <option value="IT">IT</option>
                            <option value="Khác">Khác</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>🎯 Mục đích sử dụng:</label>
                        <input type="text" id="purpose2" placeholder="VD: Họp với khách hàng, thuyết trình, đào tạo...">
                    </div>
                    <div class="form-group">
                        <label>⏰ Dự kiến trả máy:</label>
                        <input type="datetime-local" id="returnTime2">
                    </div>
                </div>
                <button class="btn btn-borrow" onclick="borrowComputer(2)">
                    ✅ Xác nhận mượn
                </button>
            </div>

            <div class="current-user" id="currentUser2" style="display: none;">
                <h4>👤 Thông tin người sử dụng:</h4>
                <p><strong>Tên:</strong> <span id="currentName2"></span></p>
                <p><strong>Phòng ban:</strong> <span id="currentDept2"></span></p>
                <p><strong>Mục đích:</strong> <span id="currentPurpose2"></span></p>
                <p><strong>Thời gian mượn:</strong> <span id="borrowTime2"></span></p>
                <p><strong>Dự kiến trả:</strong> <span id="expectedReturn2"></span></p>
            </div>

            <div class="history-section">
                <div class="history-title">📋 Lịch sử sử dụng hôm nay</div>
                <div class="history-list" id="history2">
                    <div class="history-item">Chưa có hoạt động nào hôm nay</div>
                </div>
            </div>
        </div>

        <div class="footer">
            <p><strong>📌 Lưu ý quan trọng:</strong> Vui lòng điền đầy đủ thông tin và trả máy đúng thời gian cam kết</p>
            <p><strong>📞 Hỗ trợ kỹ thuật:</strong> Ext. 1234 | <strong>📧 Email:</strong> it@company.com</p>
            <p><strong>🕒 Thời gian làm việc:</strong> 8:00 - 17:30 (Thứ 2 - Thứ 6)</p>
        </div>
    </div>

    <script>
        // Dữ liệu quản lý máy tính
        let computerData = {
            1: { 
                isInUse: false, 
                currentUser: null, 
                history: [],
                totalUsageToday: 0
            },
            2: { 
                isInUse: false, 
                currentUser: null, 
                history: [],
                totalUsageToday: 0
            }
        };

        // Hiển thị/ẩn form mượn máy
        function toggleBorrowForm(computerId) {
            const form = document.getElementById(`borrowForm${computerId}`);
            const isVisible = form.style.display !== 'none';
            
            // Ẩn tất cả form khác trước
            for (let i = 1; i <= 2; i++) {
                if (i !== computerId) {
                    document.getElementById(`borrowForm${i}`).style.display = 'none';
                }
            }
            
            form.style.display = isVisible ? 'none' : 'block';
            
            if (!isVisible) {
                // Focus vào field đầu tiên
                document.getElementById(`name${computerId}`).focus();
                // Cập nhật thời gian mặc định
                updateDefaultReturnTime(computerId);
            }
        }

        // Cập nhật thời gian trả mặc định
        function updateDefaultReturnTime(computerId) {
            const now = new Date();
            now.setHours(now.getHours() + 2); // Mặc định 2 tiếng sau
            const defaultTime = now.toISOString().slice(0, 16);
            document.getElementById(`returnTime${computerId}`).value = defaultTime;
        }

        // Validate form input
        function validateForm(computerId) {
            const name = document.getElementById(`name${computerId}`).value.trim();
            const department = document.getElementById(`department${computerId}`).value;
            const purpose = document.getElementById(`purpose${computerId}`).value.trim();
            const returnTime = document.getElementById(`returnTime${computerId}`).value;

            const errors = [];

            if (!name) errors.push('Họ và tên không được để trống');
            if (!department) errors.push('Vui lòng chọn phòng ban');
            if (!purpose) errors.push('Mục đích sử dụng không được để trống');
            if (!returnTime) errors.push('Vui lòng chọn thời gian dự kiến trả máy');

            if (returnTime) {
                const returnDate = new Date(returnTime);
                const now = new Date();
                if (returnDate <= now) {
                    errors.push('Thời gian trả máy phải sau thời điểm hiện tại');
                }
                
                // Kiểm tra không quá 8 tiếng
                const diffHours = (returnDate - now) / (1000 * 60 * 60);
                if (diffHours > 8) {
                    errors.push('Thời gian mượn không được quá 8 tiếng');
                }
            }

            return errors;
        }

        // Xử lý mượn máy
        function borrowComputer(computerId) {
            const errors = validateForm(computerId);
            
            if (errors.length > 0) {
                alert('❌ Lỗi:\n' + errors.join('\n'));
                return;
            }

            const name = document.getElementById(`name${computerId}`).value.trim();
            const department = document.getElementById(`department${computerId}`).value;
            const purpose = document.getElementById(`purpose${computerId}`).value.trim();
            const returnTime = document.getElementById(`returnTime${computerId}`).value;

            const now = new Date();
            const borrowTime = now.toLocaleString('vi-VN');
            const expectedReturn = new Date(returnTime).toLocaleString('vi-VN');

            // Cập nhật dữ liệu
            computerData[computerId].isInUse = true;
            computerData[computerId].currentUser = {
                name: name,
                department: department,
                purpose: purpose,
                borrowTime: borrowTime,
                returnTime: expectedReturn,
                startTimestamp: now
            };

            // Cập nhật giao diện
            updateComputerStatus(computerId);
            
            // Thêm vào lịch sử
            addToHistory(computerId, {
                name: name,
                department: department,
                purpose: purpose,
                time: borrowTime,
                action: 'Mượn máy',
                type: 'borrow'
            });

            // Reset form
            resetForm(computerId);
            document.getElementById(`borrowForm${computerId}`).style.display = 'none';

            // Thông báo thành công
            showNotification('✅ Đã ghi nhận thông tin mượn máy thành công!', 'success');
            
            // Cập nhật thống kê
            computerData[computerId].totalUsageToday++;
        }

        // Xử lý trả máy
        function returnComputer(computerId) {
            if (!computerData[computerId].isInUse) return;

            const userData = computerData[computerId].currentUser;
            const returnTime = new Date().toLocaleString('vi-VN');
            
            // Tính thời gian sử dụng thực tế
            const usageDuration = calculateUsageDuration(userData.startTimestamp, new Date());

            // Thêm vào lịch sử
            addToHistory(computerId, {
                name: userData.name,
                department: userData.department,
                purpose: userData.purpose,
                time: returnTime,
                action: 'Trả máy',
                type: 'return',
                duration: usageDuration
            });

            // Reset trạng thái
            computerData[computerId].isInUse = false;
            computerData[computerId].currentUser = null;

            // Cập nhật giao diện
            updateComputerStatus(computerId);

            // Thông báo thành công
            showNotification(`✅ Đã trả máy thành công!\n⏱️ Thời gian sử dụng: ${usageDuration}`, 'success');
        }

        // Tính thời gian sử dụng
        function calculateUsageDuration(startTime, endTime) {
            const diffMs = endTime - startTime;
            const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
            const diffMinutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));
            
            if (diffHours > 0) {
                return `${diffHours} giờ ${diffMinutes} phút`;
            } else {
                return `${diffMinutes} phút`;
            }
        }

        // Cập nhật trạng thái máy tính
        function updateComputerStatus(computerId) {
            const status = document.getElementById(`status${computerId}`);
            const currentUser = document.getElementById(`currentUser${computerId}`);
            const returnBtn = document.getElementById(`returnBtn${computerId}`);
            const borrowBtn = document.querySelector(`#computer${computerId} .btn-borrow`);

            if (computerData[computerId].isInUse) {
                status.className = 'status-box status-in-use';
                status.innerHTML = '🔴 ĐANG SỬ DỤNG';
                
                const user = computerData[computerId].currentUser;
                document.getElementById(`currentName${computerId}`).textContent = user.name;
                document.getElementById(`currentDept${computerId}`).textContent = user.department;
                document.getElementById(`currentPurpose${computerId}`).textContent = user.purpose;
                document.getElementById(`borrowTime${computerId}`).textContent = user.borrowTime;
                document.getElementById(`expectedReturn${computerId}`).textContent = user.returnTime;
                
                currentUser.style.display = 'block';
                returnBtn.style.display = 'inline-block';
                borrowBtn.style.display = 'none';
            } else {
                status.className = 'status-box status-available';
                status.innerHTML = '✅ ĐANG RẢNH';
                currentUser.style.display = 'none';
                returnBtn.style.display = 'none';
                borrowBtn.style.display = 'inline-block';
            }
        }

        // Thêm vào lịch sử
        function addToHistory(computerId, data) {
            const historyContainer = document.getElementById(`history${computerId}`);
            
            // Xóa message mặc định nếu đây là item đầu tiên
            if (computerData[computerId].history.length === 0) {
                historyContainer.innerHTML = '';
